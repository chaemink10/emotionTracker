{"version":3,"sources":["components/trackerDescription/trackerDescription.module.css","components/trackerList/trackerList.module.css","components/emotion/emotion.module.css","components/header/header.module.css","components/add/add.module.css","components/login/login.module.css","components/header/Header.jsx","components/add/Add.jsx","components/trackerDescription/DescriptionInput.jsx","components/trackerDescription/DescriptionList.jsx","components/trackerDescription/DescriptionConts.jsx","components/trackerList/TrackerList.jsx","components/trackerList/Tracker.jsx","components/emotion/EmotionList.jsx","components/emotion/Emotion.jsx","components/emotionTracker/EmotionTracker.jsx","components/registerForm/Register.jsx","components/login/Login.jsx","components/register/RegisterConts.jsx","App.js","reportWebVitals.js","service/firebase.js","service/database.js","service/login.js","index.js"],"names":["module","exports","Header","trackerTotalCount","onLogout","userName","className","style","header","counter","logout","onClick","Add","onAddEmotion","formRef","useRef","inputRef","add","ref","type","placeholder","event","preventDefault","addTracker","id","uid","emotion","current","value","description","reset","btn","DescriptionInput","tracker","onUpdate","onSubmit","trackerDesc","date","Date","inputDesc","text","getFullYear","getMonth","getDate","Intl","DateTimeFormat","weekday","format","updated","input","inputBtn","DescriptionList","memo","idRef","descList","onDescDelete","updatedDesc","filter","desc","map","blind","readOnly","deleteBtn","DescriptionConts","TrackerList","onDelete","trackerSection","trackerName","count","length","delete","Tracker","trackerList","Object","keys","key","EmotionList","btnRef","emotionButton","target","innerText","Emotion","title","emotionList","EmotionTracker","firebase","authService","useState","setTrackerTotalCount","setTracker","setEmotion","user","setUser","setUserName","history","useHistory","useEffect","onAuthChange","displayName","email","push","loaded","load","result","update","updatedTracker","save","addEmotion","saveEmotion","deleteTracker","remove","Register","btnType","emailRef","pwRef","goEmotion","userId","pathname","state","onAccountRegist","then","catch","error","alert","message","onAccountLogin","Login","login","outerText","errorMessage","console","log","box","RegisterConts","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConn","initializeApp","apiKey","process","authDomain","projectId","storageBucket","appId","measurementId","databaseURL","database","auth","Database","set","serviceName","on","snapshot","val","off","AuthService","service","provider","signInWithPopup","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","onUserChanged","onAuthStateChanged","signOut","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5ff15f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trackerDesc\":\"trackerDescription_trackerDesc__36-y1\",\"input\":\"trackerDescription_input__7mK-9\",\"inputBtn\":\"trackerDescription_inputBtn__26eem\",\"descList\":\"trackerDescription_descList__3OTgx\",\"date\":\"trackerDescription_date__2Ce-q\",\"deleteBtn\":\"trackerDescription_deleteBtn__1fZch\",\"blind\":\"trackerDescription_blind__3osT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trackerList\":\"trackerList_trackerList__1YRCd\",\"trackerName\":\"trackerList_trackerName__3bQFv\",\"trackerSection\":\"trackerList_trackerSection__18CUL\",\"count\":\"trackerList_count__WZCGD\",\"btn\":\"trackerList_btn__oQVcp\",\"plus\":\"trackerList_plus__34mgX\",\"minus\":\"trackerList_minus__1Ufmf\",\"delete\":\"trackerList_delete__3vEZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"emotion_title__1qM1t\",\"emotionList\":\"emotion_emotionList__3O6Yy\",\"emotionButton\":\"emotion_emotionButton__1XAze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"counter\":\"header_counter__1BAsj\",\"logout\":\"header_logout__1MXam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"add_add__2GMyP\",\"btn\":\"add_btn__Neqr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__19aQM\",\"box\":\"login_box__2ruKU\"};","import React from 'react';\nimport style from './header.module.css';\n\nconst Header = ({ trackerTotalCount, onLogout, userName }) => {\n  return (\n    <header className={style.header}>\n      <h2>\n        {userName},\n        <br /> How Was Your Today? 🙂\n      </h2>\n      <div className={style.counter}>{trackerTotalCount}</div>\n      <button className={style.logout} onClick={onLogout}>\n        LOGOUT\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useRef } from 'react';\nimport { uid } from 'uid';\nimport style from './add.module.css';\n\nconst Add = ({ onAddEmotion }) => {\n  const formRef = useRef();\n  const inputRef = useRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const addTracker = {\n      id: uid(),\n      emotion: inputRef.current.value,\n      description: [],\n    };\n    inputRef.current.value && onAddEmotion(addTracker);\n    formRef.current.reset();\n  };\n  return (\n    <section className={style.add}>\n      <form ref={formRef}>\n        <input\n          type='text'\n          placeholder='Add Your Emotion'\n          ref={inputRef}\n        ></input>\n        <button onClick={onSubmit} className={style.btn}>\n          Add\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Add;\n","import React, { useRef } from 'react';\nimport { uid } from 'uid';\nimport style from './trackerDescription.module.css';\n\nconst DescriptionInput = ({ tracker, onUpdate }) => {\n  const formRef = useRef();\n  const inputRef = useRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    let trackerDesc = []; //Updated Description Array\n    const date = new Date();\n\n    const inputDesc = {\n      id: uid(),\n      text: inputRef.current.value,\n      date: `${date.getFullYear()}.${\n        date.getMonth() + 1\n      }.${date.getDate()}.${new Intl.DateTimeFormat('ko-KR', {\n        weekday: 'short',\n      }).format(date)}`,\n    };\n\n    if (tracker.description) {\n      trackerDesc = [...tracker.description, inputDesc];\n    } else {\n      trackerDesc = [inputDesc];\n    }\n    const updated = {\n      ...tracker,\n      description: trackerDesc,\n    };\n\n    inputDesc && onUpdate(updated);\n    formRef.current.reset();\n  };\n\n  return (\n    <form onSubmit={onSubmit} ref={formRef}>\n      <div className={style.trackerDesc}>\n        <input\n          type='text'\n          className={style.input}\n          placeholder='Write your feelings in a row simply.'\n          ref={inputRef}\n        ></input>\n        <button type='submit' className={style.inputBtn}>\n          <i className='fas fa-plus'></i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default DescriptionInput;\n","import React, { memo, useRef } from 'react';\nimport { uid } from 'uid';\nimport style from './trackerDescription.module.css';\n\nconst DescriptionList = memo(({ tracker, onUpdate }) => {\n  const idRef = useRef();\n  const descList = tracker.description;\n\n  const onDescDelete = () => {\n    const updatedDesc = descList.filter((desc) => {\n      return desc.id !== idRef.current.value;\n    });\n    tracker.description = updatedDesc;\n    onUpdate(tracker);\n  };\n\n  return (\n    <ul className={style.descList}>\n      {descList.map((desc) => (\n        <li key={uid()}>\n          {desc.text}\n          <span className={style.date}>{desc.date}</span>\n          <input\n            className={style.blind}\n            ref={idRef}\n            value={desc.id}\n            readOnly\n          ></input>\n          <button\n            type='button'\n            className={style.deleteBtn}\n            onClick={onDescDelete}\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n});\n\nexport default DescriptionList;\n","import React from 'react';\nimport DescriptionInput from './DescriptionInput';\nimport DescriptionList from './DescriptionList';\n\nconst DescriptionConts = ({ tracker, onUpdate }) => {\n  return (\n    <>\n      {tracker.description && (\n        <DescriptionList\n          tracker={tracker}\n          onUpdate={onUpdate}\n        ></DescriptionList>\n      )}\n      <DescriptionInput\n        tracker={tracker}\n        onUpdate={onUpdate}\n      ></DescriptionInput>\n    </>\n  );\n};\n\nexport default DescriptionConts;\n","import React, { memo } from 'react';\nimport DescriptionConts from '../trackerDescription/DescriptionConts';\nimport style from './trackerList.module.css';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nconst TrackerList = memo(({ onDelete, onUpdate, tracker }) => {\n  //Click Delete\n  const onClickDelete = () => {\n    onDelete(tracker);\n  };\n\n  return (\n    <li>\n      <div className={style.trackerSection}>\n        <div className={style.trackerName}>{tracker.emotion}</div>\n        <div className={style.count}>\n          {tracker.description ? tracker.description.length : 0}\n        </div>\n        <button type='button' className={style.delete} onClick={onClickDelete}>\n          <i className='fas fa-trash-alt'></i>\n        </button>\n      </div>\n      <div>\n        <DescriptionConts\n          tracker={tracker}\n          onUpdate={onUpdate}\n        ></DescriptionConts>\n      </div>\n    </li>\n  );\n});\n\nexport default TrackerList;\n","import React, { memo } from 'react';\nimport TrackerList from './TrackerList';\nimport style from './trackerList.module.css';\n\nconst Tracker = memo(({ tracker, onDelete, onUpdate }) => {\n  return (\n    <ul className={style.trackerList}>\n      {Object.keys(tracker).map((key) => {\n        return (\n          <TrackerList\n            key={key}\n            onDelete={onDelete}\n            onUpdate={onUpdate}\n            tracker={tracker[key]}\n          ></TrackerList>\n        );\n      })}\n    </ul>\n  );\n});\n\nexport default Tracker;\n","import React, { useRef } from 'react';\nimport { uid } from 'uid';\nimport style from './emotion.module.css';\n\nconst EmotionList = ({ emotion, onUpdate }) => {\n  const btnRef = useRef();\n\n  const onButtonClick = (event) => {\n    const addTracker = {\n      id: uid(),\n      emotion: event.target.innerText,\n      count: 0,\n      description: [],\n    };\n    onUpdate(addTracker);\n  };\n\n  return (\n    <button\n      type='button'\n      className={style.emotionButton}\n      onClick={onButtonClick}\n      ref={btnRef}\n    >\n      {emotion.emotion}\n    </button>\n  );\n};\n\nexport default EmotionList;\n","import React from 'react';\nimport EmotionList from './EmotionList';\nimport style from './emotion.module.css';\n\nconst Emotion = ({ emotion, onUpdate }) => {\n  return (\n    <>\n      <h3 className={style.title}>Emotion List</h3>\n      <ul className={style.emotionList}>\n        {Object.keys(emotion).map((key) => {\n          return (\n            <li key={emotion[key].id}>\n              <EmotionList\n                emotion={emotion[key]}\n                onUpdate={onUpdate}\n              ></EmotionList>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Emotion;\n","import React from 'react';\nimport Header from '../header/Header';\nimport Add from '../add/Add';\nimport Tracker from '../trackerList/Tracker';\nimport { useEffect, useState } from 'react';\nimport Emotion from '../emotion/Emotion';\nimport { uid } from 'uid';\nimport { useHistory } from 'react-router';\n\nconst EmotionTracker = ({ firebase, authService }) => {\n  const [trackerTotalCount, setTrackerTotalCount] = useState(0);\n  const [tracker, setTracker] = useState({});\n  const [emotion, setEmotion] = useState({});\n  const [user, setUser] = useState();\n  const [userName, setUserName] = useState();\n  const history = useHistory();\n\n  //Checking Login\n  useEffect(() => {\n    authService.onAuthChange((user) => {\n      if (user) {\n        setUser(user.uid);\n        setUserName(user.displayName ? user.displayName : user.email);\n      } else {\n        history.push('/');\n      }\n    });\n  });\n\n  //Load Tracking List\n  useEffect(() => {\n    const loaded = firebase.load(\n      (result) => {\n        setTracker(result);\n        setTrackerTotalCount(Object.keys(result).length);\n      },\n      'tracker',\n      user\n    );\n    return () => loaded();\n  }, [firebase, user]);\n\n  //Load Emotion List\n  useEffect(() => {\n    const loaded = firebase.load(\n      (result) => {\n        setEmotion(result);\n      },\n      'emotion',\n      user\n    );\n    return () => loaded();\n  }, [firebase, user]);\n\n  //Add & Update\n  const onUpdate = (update) => {\n    setTracker((tracker) => {\n      const updatedTracker = { ...tracker };\n      updatedTracker[update.id] = update;\n      return updatedTracker;\n    });\n    firebase.save(update, user);\n  };\n\n  //Delete\n  const onDelete = (deleteTracker) => {\n    setTracker((tracker) => {\n      Object.keys(tracker).filter((key) => key !== deleteTracker.id);\n    });\n    firebase.remove(deleteTracker, user);\n  };\n\n  //Add New Emotion\n  const onAddEmotion = (add) => {\n    onUpdate(add);\n    const addEmotion = {\n      id: uid(),\n      emotion: add.emotion,\n    };\n    firebase.saveEmotion(addEmotion, user);\n  };\n\n  const onLogout = () => {\n    authService.logout();\n  };\n\n  return (\n    <>\n      <Header\n        trackerTotalCount={trackerTotalCount}\n        onLogout={onLogout}\n        userName={userName}\n      ></Header>\n      <Add onAddEmotion={onAddEmotion}></Add>\n      <Emotion emotion={emotion} onUpdate={onUpdate}></Emotion>\n      {tracker && (\n        <Tracker\n          tracker={tracker}\n          onDelete={onDelete}\n          onUpdate={onUpdate}\n        ></Tracker>\n      )}\n    </>\n  );\n};\n\nexport default EmotionTracker;\n","import React, { useRef } from 'react';\nimport { useHistory } from 'react-router';\n// import style from './register.module.css';\n\nconst Register = ({ authService, btnType }) => {\n  let emailRef = useRef();\n  let pwRef = useRef();\n  const history = useHistory();\n\n  const goEmotion = (userId) => {\n    history.push({\n      pathname: '/emotion',\n      state: { id: userId },\n    });\n  };\n\n  const onRegister = () => {\n    authService\n      .onAccountRegist(emailRef.current.value, pwRef.current.value)\n      .then((result) => {\n        goEmotion(result.user.uid);\n      })\n      .catch((error) => {\n        alert(error.message);\n        pwRef.current.value = '';\n      });\n  };\n\n  const onLogin = () => {\n    authService\n      .onAccountLogin(emailRef.current.value, pwRef.current.value)\n      .then((result) => {\n        goEmotion(result.user.uid);\n      })\n      .catch((error) => {\n        alert(error.message);\n        emailRef.current.value = '';\n      });\n  };\n\n  return (\n    <div>\n      <input type='email' ref={emailRef} placeholder='email'></input>\n      <input type='password' ref={pwRef} placeholder='password'></input>\n      {btnType === 'reg' ? (\n        <button type='button' onClick={onRegister}>\n          회원가입\n        </button>\n      ) : (\n        <button type='button' onClick={onLogin}>\n          로그인\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from 'react';\nimport style from './login.module.css';\nimport { useHistory } from 'react-router-dom';\nimport Register from '../registerForm/Register';\n\nconst Login = ({ authService }) => {\n  const history = useHistory();\n\n  const goEmotion = (userId) => {\n    history.push({\n      pathname: '/emotion',\n      state: { id: userId },\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthChange((user) => {\n      user && goEmotion(user.uid);\n    });\n  });\n\n  const onClick = (event) => {\n    authService\n      .login(event.target.outerText)\n      .then((result) => {\n        goEmotion(result.user.uid);\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(errorMessage);\n      });\n  };\n\n  //회원가입\n  const onRegister = () => {\n    history.push({\n      pathname: '/register',\n    });\n  };\n\n  return (\n    <div className={style.login}>\n      <section className={style.box}>\n        <Register authService={authService} btnType={'login'}></Register>\n        <button type='button' onClick={onRegister}>\n          회원가입\n        </button>\n        <button type='button' onClick={onClick}>\n          Google\n        </button>\n        <button type='button' onClick={onClick}>\n          Github\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Register from '../registerForm/Register';\n\nconst RegisterConts = ({ authService }) => {\n  return <Register authService={authService} btnType={'reg'}></Register>;\n};\n\nexport default RegisterConts;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport EmotionTracker from './components/emotionTracker/EmotionTracker';\nimport Login from './components/login/Login';\nimport RegisterConts from './components/register/RegisterConts';\n\nfunction App({ firebase, authService }) {\n  return (\n    <BrowserRouter basename='/emotionTracker'>\n      <Switch>\n        <Route exact path={['/', '/login']}>\n          <Login authService={authService} />\n        </Route>\n        <Route path='/register'>\n          <RegisterConts authService={authService} />\n        </Route>\n        <Route path='/emotion'>\n          <EmotionTracker firebase={firebase} authService={authService} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTO_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n};\n\nconst firebaseConn = firebase.initializeApp(firebaseConfig);\nexport const database = firebaseConn.database();\nexport const auth = firebaseConn.auth();\n","import { database } from './firebase.js';\n\nclass Database {\n  save(tracker, user) {\n    database.ref(`users/${user}/tracker/${tracker.id}`).set(tracker);\n  }\n\n  load(onUpdate, serviceName, user) {\n    const ref = database.ref(`users/${user}/${serviceName}`);\n    ref.on('value', (snapshot) => {\n      const tracker = snapshot.val();\n      tracker && onUpdate(tracker);\n    });\n    return () => ref.off();\n  }\n\n  remove(deleteTracker, user) {\n    database.ref(`users/${user}/tracker/${deleteTracker.id}`).remove();\n  }\n\n  saveEmotion(addEmotion, user) {\n    database.ref(`users/${user}/emotion/${addEmotion.id}`).set(addEmotion);\n  }\n}\n\nexport default Database;\n","import firebase from 'firebase/app';\nimport { auth } from './firebase.js';\n\nclass AuthService {\n  login(service) {\n    const provider = new firebase.auth[`${service}AuthProvider`]();\n    return auth.signInWithPopup(provider);\n  }\n\n  onAccountRegist(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  onAccountLogin(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  onAuthChange(onUserChanged) {\n    firebase.auth().onAuthStateChanged((user) => {\n      onUserChanged(user);\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut();\n  }\n}\n\nexport default AuthService;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Database from './service/database.js';\nimport AuthService from './service/login.js';\n\nconst firebase = new Database();\nconst authService = new AuthService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App firebase={firebase} authService={authService} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}